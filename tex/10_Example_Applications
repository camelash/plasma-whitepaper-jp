\section{アプリケーションの例}

分散アプリケーションはトークンによって正当な活動が経済的にインセンティブ付けされたMapReduceの問題に置き換えることができる。

\subsection{ブロックチェーン上でのRedditのクローン}

これは主にデータのストレージ（CRUD）に関してである。

主に計算と証明作業はコントロール、認証（投票や投稿）、緩和などに用いられる。

多くのwebアプリケーションは実はバックエンドでCRUDを動かしているだけである。

ルートブロックチェーンはスマートコントラクトのルールとfraud proofsを含む。

親チェーンの上層には、サブredditのアカウントが含まれる。

各サブredditはPlasmaブロックチェーンであり、親チェーンの子である。

そのサブredditの中に、投稿のPlasmaチェーンがある。

投稿の子チェーンはコメントも同様に含む。

コンセンサスメカニズムはアクセス権限を強化する。

1つ前のブロックのデータのランダムなコミット（親チェーンによって提供されるランダムなノンスも）は次のブロックのヘッダーにコミットされる。

定期的な削減機能は、１番上の投稿と他の統計によって計算される。
各々のユーザーのコンピューターはデータとソフトウェアをローカル環境にダウンロードする。

データの提出にはデータの包含をインセンティブ付けするためにトランザクション手数料がかかる。データの可用性によっては古いデータをダウンロードすることにも手数料がかかるかもしれない。

特定の投稿を見るために、ユーザーはルートチェーンのコミットメントを検証する。そして、

DHT(DecentrarizedHashTable)ネットワークに接続してsubreddit上のノードを発見し、subredditの投稿のリストを表示するChaintip（確認のためにn個前のブロックを加えたもの）をダウンロードし、軽量クライアントとしてステート・マークルツリーとrawデータ(ポストに関連するコメント付き)をダウンロードする。

ユーザーは自分自身にのみ関連するプラズマチェーンの一部を観察する必要がある（自分自身に関連する投稿と40のsubredditのみをダウンロードする）。

これはブロックチェーン上で計算処理を行うデータストレージの簡単な例である。

検証者が全てのノードを検証することは可能である。しかし、それを分割することも可能である。

シャーディングが上手く行われない場合、情報の可用性が心配される。これを緩和する方法の1つは、子チェーンの全権限をサブreddditのオーナーに加えることだ。

\subsection{DEX \- 分散取引所}

ブロックチェーン上でのredditのクローンは、CRUDウェブアプリケーションへの影響が明確だが、site statisticsを除きMapReduceオペレーションの恩恵を多く受けるわけではない。

分散取引所は、容量の多い取引を高速にすることを可能にする。

沢山のstatesがあるので、アウトプット上限はUTXOの代わりにアカウントで決まる。もしくは、state machineの各々のステップでより大きなbitmap が単体のbitmapの中のbooleanの代わりに各々のstateを代表する為に使われる。


サブredditに似ていて、取引相手を示しめしている子チェーンの木構造が有る。

それぞれのなかに、スケーラビリティーを最大化する為に、木構造のチェーンがある。
（低活動のペアにとってはただ1つのPlasmaチェーンかもしれないが、高活動のチェーンにとってはもっと沢山の子チェーンをもっているかもしれない。）

これらのチェーンの各々は、アクティビティーと結びついており、ラウンド毎の取引できる量は事前に決定された量によって制限をかけることができる。

最初のステップは子チェーンに残高をもつことである。それで、決済に用いるPlasmaチェーンのようなものになる。

次に子チェーンの中にオーダーが発行される。

親チェーンへのコミットの一部として、全ての取引の順序は順序付けされたメークル木構造化され、そのチェーン自体が1つの順序を表しているように整理される。

このステップは、最も高次の親Plasmaチェーンに到達するまで行われ、順序が整理されることで扱うチェーンの数を削減する。

順番が受け取られたら、受付を終了しbatch fashionで取引が実行される。


この削減ステップが完了し、ルートチェーンにコミットされたら後、各々のチェーンはmap ステップを通じて自分の配置場所を知ることになる。

親チェーンは子チェーンの順序の配置を既定された情報として通告する。

与えられた子チェーンは他のチェーンの順序も見ることができるなら（このステップで親チェーンをみることができるということを示唆している。）子チェーンは、このmapステップで正しく配置が実行されたことを証明することができる。

配置を受け取った後、そのmapステップはそのチェーンの子チェーンに同じ作業を行う。

これが完了すると、全てのfundのアップデートをブロックにコミットし、ブロックヘッダーを親チェーンに提出することにより最後の削減ステップが行われる。

高額が動く際に、複数のMapReduceを許容することでさらなる最適化という手法もある。しかし、この構造は一般的に極めて高量の時に可能となる。

このフレームワーク内の世界の全ての取引活動を実行することも理論的には可能である。
わからないです。

このタイプの構造は数々の金融活動や計算に役立つ。 

\subsection{分散メールシステム}
D\-Mailを創るために、Plasmaチェーンのアカウントを紐付け、メールを受け取る為に決済を行うようにすることもできる。

送信はユーザーの公開鍵で暗号化される。

知らない存在からのメールは支払いを行いわないと見ることができなかったり、zk\-SNARKsを使うことでさらなる最適化を履行することができる。

親チェーンはチェーンのディレクトリーを含み、決済を強制する。

シンプルなデザインである。

\subsection{分散化CDN}

分散化したCDNも可能である。
 
イーサリアムのShardingプロトコルと似ている。
 
各々の子チェーンをシャードとして扱う。

ランダムな指標を持つ。（ルートブロックチェーンなど）

nブロックごとに、シャード間でデータのシャッフルを行う。
 
親チェーンはシャッフルを実行する責任を持つ。

他のチェーンはアーカイブを保存する。

データの紛失は公開され、そのアーカイブを持っていた人に報酬が入る。

1つのシャードだけが情報を公開し、他のシャードが公開しなければ1つのシャードだけが報酬を受けるのことになるので、情報を拡散するインセンティブがある。

この仕組みの頑丈さはその”流れ”の長さ依存している。頑強になればなるだけ、シャードはより多くのコピーをどの時点においても持つ必要がある。

ここでの鍵となる知見はストレージがa function of bandwidthということである。

データはディスクの中で固定されたものとして扱われない。

全てのデータは実際に動いていて次の目的地まで移動している。とてもTaoist的なアプローチである。

データをダウンロードするためには、親チェーンのシャードとランダムな指標を検証して、どのシャードが必要なデータをもっているのかを知る。そして、DHTを経由してそのシャードにアクセスし認証を経てデータをダウンロードする。

\subsection{プライベートチェーン}

参加者はチェーンのデータを他のチェーンに公開する責任を負わない。（公開することにデメリットはないが）そして、その結果、もし参加者がチェン上でルートチェーンによって履行されたプライベートブロックチェーンネットワークを持ちたければ、そうすることができる。

これは、イントラネットとインターネットの構造と類似している。取引はローカルのプライベートブロックチェーン上で行われるが、取引のコミュニケーションとフィナンシャルアクティビティーはパブリックブロックチェーン上で行われる。
